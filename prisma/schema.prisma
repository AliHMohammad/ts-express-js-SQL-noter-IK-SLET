generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model album {
  id            Int            @id @default(autoincrement())
  title         String         @unique() @db.VarChar(255)
  yearOfRelease Int            @map(name: "year_of_release")
  image         String?        @default("anon-billed") @db.VarChar(1000)
  albumTrack    album_track[]
  artistAlbum   artist_album[]
}

model artist {
  id          Int            @id @default(autoincrement())
  name        String         @unique() @db.VarChar(255)
  image       String?        @default("anon-billed") @db.VarChar(1000)
  artistAlbum artist_album[]
  artistTrack artist_track[]
}

model track {
  id          Int            @id @default(autoincrement())
  title       String         @db.VarChar(255)
  duration    Int
  trackAlbum  album_track[]
  trackArtist artist_track[]
}

model album_track {
  album_id Int
  track_id Int
  track    track @relation(fields: [track_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  album    album @relation(fields: [album_id], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@id([album_id, track_id])
}

model artist_track {
  artist_id Int
  track_id  Int
  artist    artist @relation(fields: [artist_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  track     track  @relation(fields: [track_id], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@id([artist_id, track_id])
}

model artist_album {
  artist_id Int
  album_id  Int
  artist    artist @relation(fields: [artist_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  album     album  @relation(fields: [album_id], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@id([artist_id, album_id])
}
